import "int.rf";

namespace std {
    typedef cstring va_list;
    typedef int64_t fpos_t;
    
    /*
        Only declared importent functions and constants
    */
    native struct FILE;
    
    native int BUFSIZ;
    native int FILENAME_MAX;
    native int FOPEN_MAX;
    native int SYS_OPEN;
    native int _IOFBF;
    native int _IOLBF;
    native int _IONBF;
    native int SEEK_CUR;
    native int SEEK_END;
    native int SEEK_SET;
    native int TMP_MAX;
    native int L_tmpnam;
    native int EOF;
    
    // Streams
    native FILE *stdout;
    native FILE *stderr;
    native FILE *stdin;
    
    // Functions
    native void clearerr(FILE *stream);
    native int *ctermid(cstring s);
    native FILE *cuserid(cstring s);
    native int fclose(FILE *stream);
    native FILE *fdopen(int fd, cstring mode);
    native int feof(FILE *stream);
    native int ferror(FILE *stream);
    native int fflush(FILE *stream);
    native int fgetc(FILE *stream);
    native int fgetpos(FILE *stream, int *pos);
    native cstring fgets(cstring s, int size, FILE *stream);
    native int fileno(FILE *stream);
    native int flockfile(FILE *stream);
    native FILE *fopen(cstring filename, cstring mode);
    native int fprintf(FILE *stream, cstring format, ... rest);
    native int fputc(int c, FILE *stream);
    native int fputs(cstring s, FILE *stream);
    native ulong fread(void *ptr, ulong size, ulong nmemb, FILE *stream);
    native FILE *freopen(cstring filename, cstring mode, FILE *stream);
    native int fscanf(FILE *stream, cstring format, ... rest);
    native int fseek(FILE *stream, int offset, int whence);
    native int fseeko(FILE *stream, int offset, int whence);
    native int fsetpos(FILE *stream, int *pos);
    native int ftell(FILE *stream);
    native int ftello(FILE *stream);
    native void ftrylockfile(FILE *stream);
    native void funlockfile(FILE *stream);
    native ulong fwrite(void *ptr, ulong size, ulong nmemb, FILE *stream);
    native int getc(FILE *stream);
    native int getchar();
    native int getc_unlocked(FILE *stream);
    native int getchar_unlocked();
    native int getopt(int argc, cstring *argv, cstring optstring); // WARNING: LEGACY FUNCTION
    native int gets(cstring s);
    native int getw(FILE *stream);
    native int pclose(FILE *stream);
    native void perror(cstring s);
    native FILE *popen(cstring command, cstring typ);
    native int printf(cstring format, ... rest);
    native int putc(int c, FILE *stream);
    native int putchar(int c);
    native int putc_unlocked(int c, FILE *stream);
    native int putchar_unlocked(int c);
    native int puts(cstring s);
    native int putw(int w, FILE *stream);
    native void remove(cstring filename);
    native void rename(cstring old, cstring new);
    native void rewind(FILE *stream);
    native void scanf(cstring format, ... rest);
    native void setbuf(FILE *stream, cstring buf);
    native int setvbuf(FILE *stream, cstring buf, int mode, ulong size);
    native int snprintf(cstring s, ulong n, cstring format, ... rest);
    native int sprintf(cstring s, cstring format, ... rest);
    native int sscanf(cstring s, cstring format, ... rest);
    native cstring tempnam(cstring dir, cstring pfx);
    native FILE *tmpfile();
    native cstring tmpnam(cstring s);
    native int vfprintf(FILE *stream, cstring format, va_list arg);
    native int vprintf(cstring format, va_list arg);
    native int vsnprintf(cstring s, ulong n, cstring format, va_list arg);
    native int vsprintf(cstring s, cstring format, va_list arg);
}