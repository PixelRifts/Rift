// Simple Declaration: 
//     name : type = value;
// type can be inferred from value in which case:
//     name := value;

// Native declarations

printf := func(str : cstring, data : ...) -> int #native;
puts   := func(str : cstring) -> int #native;

// Lambda expressions are the way to define functions.
//    func(param1 : type1, param2 : type2) [-> return_type] body
//    body can be a block statement or any regular statement

add  := func(a : int, b : int) -> int return a + b;

// Entry point

main := func() -> int {
    i := 0;
    j := 10;
    k := 20;
    
    l := add(i, add(j, k));
    
    printf("%lld\n", l);
    
    if l == 30 {
        tau := 0;
        while tau < 10 {
            tau++;
            printf("%lld ", tau);
        }
        printf("\n");
    } else {
        puts("Not thirty");
    }
    
    return 0;
}
